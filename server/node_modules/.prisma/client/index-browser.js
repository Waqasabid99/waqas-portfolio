
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.11.1
 * Query Engine version: f40f79ec31188888a2e33acda0ecc8fd10a853a9
 */
Prisma.prismaVersion = {
  client: "6.11.1",
  engine: "f40f79ec31188888a2e33acda0ecc8fd10a853a9"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  password: 'password',
  full_name: 'full_name',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ContactFormScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  subject: 'subject',
  message: 'message',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  userId: 'userId'
};

exports.Prisma.ProjectScalarFieldEnum = {
  id: 'id',
  username: 'username',
  email: 'email',
  password: 'password',
  projectName: 'projectName',
  projectTitle: 'projectTitle',
  category: 'category',
  price: 'price',
  deadline: 'deadline',
  details: 'details',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  userId: 'userId'
};

exports.Prisma.WebDevelopmentDetailScalarFieldEnum = {
  id: 'id',
  tech: 'tech',
  webPages: 'webPages',
  projectId: 'projectId'
};

exports.Prisma.WebDevelopmentFeatureScalarFieldEnum = {
  id: 'id',
  feature: 'feature',
  price: 'price',
  webDevDetailId: 'webDevDetailId'
};

exports.Prisma.SeoDetailScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  projectId: 'projectId'
};

exports.Prisma.SeoTypeScalarFieldEnum = {
  id: 'id',
  seoType: 'seoType',
  price: 'price',
  seoDetailId: 'seoDetailId'
};

exports.Prisma.DigitalMarketingDetailScalarFieldEnum = {
  id: 'id',
  targetAudience: 'targetAudience',
  marketingBudget: 'marketingBudget',
  duration: 'duration',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  projectId: 'projectId'
};

exports.Prisma.DigitalMarketingServiceScalarFieldEnum = {
  id: 'id',
  service: 'service',
  price: 'price',
  digitalMarketingDetailId: 'digitalMarketingDetailId'
};

exports.Prisma.SocialPlatformScalarFieldEnum = {
  id: 'id',
  platform: 'platform',
  price: 'price',
  digitalMarketingDetailId: 'digitalMarketingDetailId'
};

exports.Prisma.ContentGenerationDetailScalarFieldEnum = {
  id: 'id',
  volume: 'volume',
  contentTone: 'contentTone',
  targetKeywords: 'targetKeywords',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  projectId: 'projectId'
};

exports.Prisma.ContentTypeScalarFieldEnum = {
  id: 'id',
  contentType: 'contentType',
  price: 'price',
  contentGenerationDetailId: 'contentGenerationDetailId'
};

exports.Prisma.ContentLanguageScalarFieldEnum = {
  id: 'id',
  language: 'language',
  price: 'price',
  contentGenerationDetailId: 'contentGenerationDetailId'
};

exports.Prisma.AppDevelopmentDetailScalarFieldEnum = {
  id: 'id',
  appType: 'appType',
  complexity: 'complexity',
  targetPlatforms: 'targetPlatforms',
  expectedUsers: 'expectedUsers',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  projectId: 'projectId'
};

exports.Prisma.AppFeatureScalarFieldEnum = {
  id: 'id',
  feature: 'feature',
  price: 'price',
  appDevelopmentDetailId: 'appDevelopmentDetailId'
};

exports.Prisma.AdminScalarFieldEnum = {
  id: 'id',
  email: 'email',
  password: 'password',
  name: 'name',
  role: 'role',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProjectStatusHistoryScalarFieldEnum = {
  id: 'id',
  projectId: 'projectId',
  oldStatus: 'oldStatus',
  newStatus: 'newStatus',
  changedBy: 'changedBy',
  notes: 'notes',
  createdAt: 'createdAt'
};

exports.Prisma.PortfolioProjectScalarFieldEnum = {
  id: 'id',
  title: 'title',
  category: 'category',
  image: 'image',
  description: 'description',
  technologies: 'technologies',
  liveUrl: 'liveUrl',
  githubUrl: 'githubUrl',
  featured: 'featured',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.UserOrderByRelevanceFieldEnum = {
  email: 'email',
  password: 'password',
  full_name: 'full_name'
};

exports.Prisma.ContactFormOrderByRelevanceFieldEnum = {
  name: 'name',
  email: 'email',
  subject: 'subject',
  message: 'message'
};

exports.Prisma.ProjectOrderByRelevanceFieldEnum = {
  username: 'username',
  email: 'email',
  password: 'password',
  projectName: 'projectName',
  projectTitle: 'projectTitle',
  category: 'category',
  deadline: 'deadline',
  details: 'details',
  status: 'status'
};

exports.Prisma.WebDevelopmentDetailOrderByRelevanceFieldEnum = {
  tech: 'tech'
};

exports.Prisma.WebDevelopmentFeatureOrderByRelevanceFieldEnum = {
  feature: 'feature'
};

exports.Prisma.SeoTypeOrderByRelevanceFieldEnum = {
  seoType: 'seoType'
};

exports.Prisma.DigitalMarketingDetailOrderByRelevanceFieldEnum = {
  targetAudience: 'targetAudience',
  duration: 'duration'
};

exports.Prisma.DigitalMarketingServiceOrderByRelevanceFieldEnum = {
  service: 'service'
};

exports.Prisma.SocialPlatformOrderByRelevanceFieldEnum = {
  platform: 'platform'
};

exports.Prisma.ContentGenerationDetailOrderByRelevanceFieldEnum = {
  volume: 'volume',
  contentTone: 'contentTone',
  targetKeywords: 'targetKeywords'
};

exports.Prisma.ContentTypeOrderByRelevanceFieldEnum = {
  contentType: 'contentType'
};

exports.Prisma.ContentLanguageOrderByRelevanceFieldEnum = {
  language: 'language'
};

exports.Prisma.AppDevelopmentDetailOrderByRelevanceFieldEnum = {
  appType: 'appType',
  complexity: 'complexity',
  targetPlatforms: 'targetPlatforms'
};

exports.Prisma.AppFeatureOrderByRelevanceFieldEnum = {
  feature: 'feature'
};

exports.Prisma.AdminOrderByRelevanceFieldEnum = {
  email: 'email',
  password: 'password',
  name: 'name',
  role: 'role'
};

exports.Prisma.ProjectStatusHistoryOrderByRelevanceFieldEnum = {
  oldStatus: 'oldStatus',
  newStatus: 'newStatus',
  changedBy: 'changedBy',
  notes: 'notes'
};

exports.Prisma.PortfolioProjectOrderByRelevanceFieldEnum = {
  title: 'title',
  category: 'category',
  image: 'image',
  description: 'description',
  technologies: 'technologies',
  liveUrl: 'liveUrl',
  githubUrl: 'githubUrl',
  status: 'status'
};


exports.Prisma.ModelName = {
  User: 'User',
  ContactForm: 'ContactForm',
  Project: 'Project',
  WebDevelopmentDetail: 'WebDevelopmentDetail',
  WebDevelopmentFeature: 'WebDevelopmentFeature',
  SeoDetail: 'SeoDetail',
  SeoType: 'SeoType',
  DigitalMarketingDetail: 'DigitalMarketingDetail',
  DigitalMarketingService: 'DigitalMarketingService',
  SocialPlatform: 'SocialPlatform',
  ContentGenerationDetail: 'ContentGenerationDetail',
  ContentType: 'ContentType',
  ContentLanguage: 'ContentLanguage',
  AppDevelopmentDetail: 'AppDevelopmentDetail',
  AppFeature: 'AppFeature',
  Admin: 'Admin',
  ProjectStatusHistory: 'ProjectStatusHistory',
  PortfolioProject: 'PortfolioProject'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
